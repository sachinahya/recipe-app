# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Category {
  id: Int!
  name: String!
}

type Cuisine {
  id: Int!
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type ImageMeta {
  id: String!
  url: String!
  creationDate: DateTime!
  modifiedDate: DateTime!
  order: Int
}

type Ingredient {
  id: Int!
  quantity: Float!
  item: String!
  measure: String
  group: String
  notes: String
}

type IngredientBase {
  id: Int!
  quantity: Float!
  item: String!
  measure: String
  group: String
  notes: String
}

type Mutation {
  register(newUser: NewUserInput!): User!
  login(password: String!, email: String!): User!
  logout: Int!
  addRecipe(data: RecipeInput!): Recipe!
  stageImage(file: Upload!): String!
}

input NewCategoryInput {
  id: Int
  name: String
}

input NewCuisineInput {
  id: Int
  name: String
}

input NewIngredientInput {
  id: Int!
  quantity: Float!
  item: String!
  measure: String
  group: String
  notes: String
}

input NewStepInput {
  id: Int!
  description: String!
}

input NewUserInput {
  id: Int
  email: String!
  plainTextPassword: String!
}

type Query {
  currentUser: User
  recipe(id: Float!): Recipe
  recipes: [Recipe!]!
  userCategories: [Category!]!
  userCuisines: [Cuisine!]!
}

type Recipe {
  id: Int!
  title: String!
  description: String
  creationDate: DateTime!
  modifiedDate: DateTime!
  author: User!
  categories: [Category!]!
  cuisines: [Cuisine!]!
  imageUrl: String @deprecated(reason: "Only used for imported recipes. Use \"images\" instead.")
  images: [ImageMeta!]
  prepTime: Float
  cookTime: Float
  yield: Float
  sourceUrl: String
  ingredients: [Ingredient!]!
  steps: [Step!]!
  totalTime: Float!
}

input RecipeInput {
  id: Int
  title: String!
  description: String
  categories: [NewCategoryInput!]
  cuisines: [NewCuisineInput!]
  imageUrl: String
  stagedImages: [StagedImage!]
  prepTime: Int
  cookTime: Int
  yield: Int
  ingredients: [NewIngredientInput!]
  steps: [NewStepInput!]
  sourceUrl: String
}

input StagedImage {
  id: String!
  order: Int!
}

type Step {
  id: Int!
  description: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  email: String!
}
